openapi: 3.1.0

info:
  title: Challenge API
  version: 1.0.0

servers:
  - url: http://localhost:4000

paths:
  # PRIVATE CUSTOMER #
  /private/customer:
    post:
      summary: Create a customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
      responses:
        '200':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'

  /private/customer/{id}:
    get:
      summary: Get a customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
    put:
      summary: Update a customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
      responses:
        '200':
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
    delete:
      summary: Delete a customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer deleted

  /private/customer/customerSum:
    get:
      summary: Get sum of customer orders
      responses:
        '200':
          description: List of customer order sums
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderValueDto'

  #  PRIVATE ORDER  #
  /private/order:
    post:
      summary: Create an order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'

  /private/order/{id}:
    get:
      summary: Get an order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
    put:
      summary: Update an order (private)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: Order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
    delete:
      summary: Delete an order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order deleted

  /private/order/totals:
    get:
      summary: Get all orders sorted by total
      responses:
        '200':
          description: Orders list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'

  # PRIVATE PRODUCT #
  /private/product:
    post:
      summary: Create a product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
      responses:
        '200':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /private/product/{id}:
    get:
      summary: Get a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
    put:
      summary: Update a product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
    delete:
      summary: Delete a product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted

  /private/product/getNumSold:
    get:
      summary: Get number of sold units per product
      responses:
        '200':
          description: List of products with sold counts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'

  # ---------------- PUBLIC ORDER ---------------- #
  /public/order:
    post:
      summary: Create an order (public)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
    put:
      summary: Update an order (public)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: Order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'

  # ---------------- PUBLIC PRODUCT ---------------- #
  /public/product:
    get:
      summary: Get all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'

  /public/product/{id}:
    get:
      summary: Get a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'

components:
  schemas:
    CustomerDto:
      type: object
      properties:
        name:
          type: string
        email:
          type: string


    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        orderList:
          type: array
          items:
            $ref: '#/components/schemas/Order'

    Order:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
        total_amount:
          type: long
        customer:
          type: object
          $ref: '#/components/schemas/Customer'
        orderList:
          type: array
          items:
            $ref: '#/components/schemas/Order'

    OrderDto:
      type: object
      properties:
        id:
          type: integer
        value:
          type: number
          format: double
        productList:
          type: array
          items:
            $ref: '#/components/schemas/ProductDto'

    OrderValueDto:
      type: object
      properties:
        customerName:
          type: string
        totalValue:
          type: number
          format: long

    ProductDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: long
        sold:
          type: integer
        orderDtoList:
          type: array
          items:
            $ref: '#/components/schemas/OrderDto'

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: long
        orderList:
          type: array
          items:
            $ref: '#/components/schemas/Order'

